{
  "Resources": {
    "CustomNrPolicyNameTestNewRelicPolicy": {
      "Type": "Custom::NewRelicPolicy",
      "Properties": {
        "ServiceToken": "arn:aws:test-policy_service_token",
        "policy": {
          "name": "Custom NR policy name TEST",
          "incident_preference": "PER_CONDITION"
        }
      }
    },
    "DummyThrottlesInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dummy Throttles",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "displayName": [
                    "plugin-test-test-dummy-lambda"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.throttles.Maximum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "LambdaFunction",
          "event_type": "ServerlessSample",
          "runbook_url": "https://aws.amazon.com/lambda/"
        }
      }
    },
    "Duration1SecInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Duration 1 sec",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "displayName": [
                    "plugin-test-test-ga-lambda",
                    "plugin-test-test-dummy-lambda"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.duration.Maximum",
          "critical_threshold": {
            "value": 1000,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "LambdaFunction",
          "event_type": "ServerlessSample",
          "runbook_url": "https://aws.amazon.com/lambda/"
        }
      }
    },
    "FunctionErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Function Errors",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "displayName": [
                    "plugin-test-test-ga-lambda",
                    "plugin-test-test-test-lambda"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.errors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "LambdaFunction",
          "event_type": "ServerlessSample"
        }
      }
    },
    "ApiGateway4XxErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Api Gateway 4 XX Errors",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "apiName": [
                    "test-plugin-test"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.4xxError.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "event_type": "ApiGatewaySample"
        }
      }
    },
    "ApiGateway5XxErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Api Gateway 5 XX Errors",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "apiName": [
                    "test-plugin-test"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.5xxError.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "event_type": "ApiGatewaySample"
        }
      }
    },
    "SqsDlqVisibleMessagesInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Sqs Dlq Visible Messages",
          "enabled": true,
          "filter": {
            "and": [
              {
                "in": {
                  "queueName": [
                    "test-sqs-dlq"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.approximateNumberOfMessagesVisible.Maximum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "SqsQueue",
          "event_type": "QueueSample"
        }
      }
    },
    "DynamoDbBatchGetSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Batch Get System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.batchGetSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbBatchWriteSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Batch Write System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.batchWriteSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbDeleteSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Delete System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.deleteSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbGetSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Get System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.getSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbPutSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Put System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.putSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbQuerySystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Query System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.querySystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbScanSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Scan System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.scanSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    },
    "DynamoDbUpdateSystemErrorsInfrastructureCondition": {
      "Type": "Custom::NewRelicInfrastructureCondition",
      "Properties": {
        "ServiceToken": "arn:aws:test-infrastructure_condition_service_token",
        "policy_id": {
          "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
        },
        "data": {
          "type": "infra_metric",
          "name": "Dynamo Db Update System Errors",
          "enabled": false,
          "filter": {
            "and": [
              {
                "in": {
                  "tableName": [
                    "test-table"
                  ]
                }
              }
            ]
          },
          "policy_id": {
            "Ref": "CustomNrPolicyNameTestNewRelicPolicy"
          },
          "violation_close_timer": 24,
          "comparison": "above",
          "select_value": "provider.updateSystemErrors.Sum",
          "critical_threshold": {
            "value": 3,
            "duration_minutes": 5,
            "time_function": "all"
          },
          "integration_provider": "DynamoDbTable",
          "event_type": "DatastoreSample"
        }
      }
    }
  }
}