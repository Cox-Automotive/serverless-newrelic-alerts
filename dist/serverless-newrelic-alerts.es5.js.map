{"version":3,"file":"serverless-newrelic-alerts.es5.js","sources":["../src/utils/name-normalizer.ts","../src/index.ts"],"sourcesContent":["export function getNormalizedPolicyName(functionName: string, policyName: string) {\n  return `${functionName}${policyName.split(' ').join('')}Policy`\n}\n\nexport const getNormalizedFilterItemName = (functionName: string, filterItemName: string = '') => {\n  return `${functionName}${filterItemName.split(' ').join('')}FilterItem`\n}\n\nexport const getNormalizedInfrastructureConditionName = (\n  functionName: string,\n  conditionName: string\n) => {\n  return `${functionName}${conditionName.split(' ').join('')}InfrastructureCondition`\n}\n\nexport const getNormalizedNrqlConditionName = (functionName: string, conditionName: string) => {\n  return `${functionName}${conditionName.split(' ').join('')}NrqlCondition`\n}\n","import Plugin from 'serverless/classes/Plugin'\nimport AwsProvider from 'serverless/plugins/aws/provider/awsProvider'\nimport Serverless from 'serverless'\nimport {\n  AlertPolicy,\n  InfrastructureCondition,\n  NrqlCondition,\n  AlertsParams,\n  FilterItem\n} from './types/alert'\n\nimport {\n  getNormalizedFilterItemName,\n  getNormalizedInfrastructureConditionName,\n  getNormalizedNrqlConditionName,\n  getNormalizedPolicyName\n} from './utils/name-normalizer'\n\nclass ServerlessPlugin implements Plugin {\n  serverless: Serverless\n  options: Serverless.Options\n  awsProvider: AwsProvider\n  providerNaming: any\n  hooks: Plugin.Hooks\n\n  constructor(serverless: Serverless, options: Serverless.Options) {\n    this.serverless = serverless\n    this.awsProvider = this.serverless.getProvider('aws')\n    this.providerNaming = this.awsProvider.naming\n    this.options = options\n\n    this.hooks = {\n      'package:compileEvents': this.compile.bind(this)\n    }\n  }\n\n  getFunctions() {\n    return this.serverless.service.getAllFunctions()\n  }\n\n  // TODO: could we access SSM to get the service token\n  getPolicyCloudFormation(\n    policy: AlertPolicy,\n    policyServiceToken: string,\n    normalizedFunctionName: string\n  ) {\n    return {\n      [`${getNormalizedPolicyName(normalizedFunctionName, policy.name)}`]: {\n        Type: 'Custom::NewRelicPolicy',\n        Properties: {\n          ServiceToken: policyServiceToken,\n          policy: {\n            ...policy\n          }\n        }\n      }\n    }\n  }\n\n  getFilterItemCloudFormation(\n    filterItem: FilterItem,\n    filterItemServiceToken: string,\n    normalizedFunctionName: string\n  ) {\n    return {\n      [`${getNormalizedFilterItemName(normalizedFunctionName)}`]: {\n        Type: 'Custom::NRFilterItem',\n        Properties: {\n          ServiceToken: filterItemServiceToken,\n          data: {\n            ...filterItem\n          }\n        }\n      }\n    }\n  }\n\n  getInfrastructureConditionCloudFormation(\n    infrastructureCondition: InfrastructureCondition,\n    infrastructureConditionServiceToken: string,\n    normalizedFunctionName: string\n  ) {\n    const policy_id = infrastructureCondition.policy_id\n    delete infrastructureCondition.policy_id\n    return {\n      [`${getNormalizedInfrastructureConditionName(\n        normalizedFunctionName,\n        infrastructureCondition.data.name\n      )}`]: {\n        Type: 'Custom::NewRelicInfrastructureCondition',\n        Properties: {\n          ServiceToken: infrastructureConditionServiceToken,\n          policy_id: policy_id,\n          ...infrastructureCondition\n        }\n      }\n    }\n  }\n\n  getNrqlConditionCloudFormation(\n    nrqlCondition: NrqlCondition,\n    nrqlConditionServiceToken: string,\n    normalizedFunctionName: string\n  ) {\n    const policy_id = nrqlCondition.policy_id\n    delete nrqlCondition.policy_id\n    return {\n      [`${getNormalizedNrqlConditionName(normalizedFunctionName, nrqlCondition.name)}`]: {\n        Type: 'Custom::NewRelicNrqlCondition',\n        Properties: {\n          ServiceToken: nrqlConditionServiceToken,\n          policy_id: policy_id,\n          nrql_condition: {\n            ...nrqlCondition\n          }\n        }\n      }\n    }\n  }\n\n  compile() {\n    const functions = this.getFunctions()\n    if (!functions) {\n      // TODO warn no config\n      return\n    }\n\n    functions.forEach(functionName => {\n      const functionObj = this.serverless.service.getFunction(\n        functionName\n      ) as Serverless.FunctionDefinition & { alerts: AlertsParams }\n      const {\n        alerts: {\n          policies = [],\n          filter_item = [],\n          infrastructure_conditions = [],\n          nrql_conditions = [],\n          policy_service_token: policyServiceToken = '',\n          filter_item_service_token: filterItemServiceToken = '',\n          nrql_condition_service_token: nrqlConditionServiceToken = '',\n          infrastructure_condition_service_token: infrastructureConditionServiceToken = ''\n        } = {}\n      } = functionObj\n\n      const policyStatements = policies.reduce((statements, policy) => {\n        if (policy) {\n          const normalizedFunctionName = this.providerNaming.getLambdaLogicalId(functionName)\n          const cf = this.getPolicyCloudFormation(\n            policy,\n            policyServiceToken,\n            normalizedFunctionName\n          )\n          return { ...statements, ...cf }\n        }\n      }, {})\n\n      const filterItemStatements = filter_item.reduce((statements, filterItem) => {\n        if (filterItem) {\n          const normalizedFunctionName = this.providerNaming.getLambdaLogicalId(functionName)\n          const cf = this.getFilterItemCloudFormation(\n            filterItem,\n            filterItemServiceToken,\n            normalizedFunctionName\n          )\n          return { ...statements, ...cf }\n        }\n      }, {})\n\n      const infrastructureConditionStatements = infrastructure_conditions.reduce(\n        (statements, condition) => {\n          if (condition) {\n            const normalizedFunctionName = this.providerNaming.getLambdaLogicalId(functionName)\n            const cf = this.getInfrastructureConditionCloudFormation(\n              condition,\n              infrastructureConditionServiceToken,\n              normalizedFunctionName\n            )\n            return { ...statements, ...cf }\n          }\n        },\n        {}\n      )\n\n      const nrqlConditionStatements = nrql_conditions.reduce((statements, condition) => {\n        if (condition) {\n          const normalizedFunctionName = this.providerNaming.getLambdaLogicalId(functionName)\n          const cf = this.getNrqlConditionCloudFormation(\n            condition,\n            nrqlConditionServiceToken,\n            normalizedFunctionName\n          )\n          return { ...statements, ...cf }\n        }\n      }, {})\n\n      console.log('FilterItem: ', filterItemStatements)\n\n      Object.assign(this.serverless.service.provider.compiledCloudFormationTemplate.Resources, {\n        ...policyStatements,\n        ...filterItemStatements,\n        ...infrastructureConditionStatements,\n        ...nrqlConditionStatements\n      })\n    })\n  }\n}\n\nmodule.exports = ServerlessPlugin\n"],"names":[],"mappings":"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"}